DataQuestPursue = DataQuestPursue or {}

DataQuestPursue.data_patrol_length = 1
DataQuestPursue.data_patrol={}
DataQuestPursue.patrolData={}
DataQuestPursue.patrolGetFunc={
	["35030_10004"]=[[{35030,10004,{{44030,100}},100,800,8,30,{{1203,742},{1908,432},{2682,678},{2836,2035},{1564,2349},{909,2017}}}]],}
local mt = {}
	mt.__index = function(_table, index)
	if DataQuestPursue.patrolData[index] then return DataQuestPursue.patrolData[index] end
	local base = loadstring(string.format('return %s',DataQuestPursue.patrolGetFunc[index]))() if not base then return end
	DataQuestPursue.patrolData[index]={
		id=base[1],
		map_base_id=base[2],
		unit_list=base[3],
		weight=base[4],
		pcnt=base[5],
		min_move_step=base[6],
		max_move_step=base[7],
		points=base[8]
	}
	return DataQuestPursue.patrolData[index]
end
setmetatable(DataQuestPursue.data_patrol, mt)

DataQuestPursue.data_cost_length = 77
DataQuestPursue.data_cost={}
DataQuestPursue.costData={}
DataQuestPursue.costGetFunc={
	[60]=[[{{{90000,3000000}}}]],
	[61]=[[{{{90000,3000000}}}]],
	[62]=[[{{{90000,3000000}}}]],
	[63]=[[{{{90000,3000000}}}]],
	[64]=[[{{{90000,3000000}}}]],
	[65]=[[{{{90000,3000000}}}]],
	[66]=[[{{{90000,3000000}}}]],
	[67]=[[{{{90000,3000000}}}]],
	[68]=[[{{{90000,3000000}}}]],
	[69]=[[{{{90000,3000000}}}]],
	[70]=[[{{{90000,7000000}}}]],
	[71]=[[{{{90000,7000000}}}]],
	[72]=[[{{{90000,7000000}}}]],
	[73]=[[{{{90000,7000000}}}]],
	[74]=[[{{{90000,7000000}}}]],
	[75]=[[{{{90000,7000000}}}]],
	[76]=[[{{{90000,7000000}}}]],
	[77]=[[{{{90000,7000000}}}]],
	[78]=[[{{{90000,7000000}}}]],
	[79]=[[{{{90000,7000000}}}]],
	[80]=[[{{{90000,10000000}}}]],
	[81]=[[{{{90000,10000000}}}]],
	[82]=[[{{{90000,10000000}}}]],
	[83]=[[{{{90000,10000000}}}]],
	[84]=[[{{{90000,10000000}}}]],
	[85]=[[{{{90000,10000000}}}]],
	[86]=[[{{{90000,10000000}}}]],
	[87]=[[{{{90000,10000000}}}]],
	[88]=[[{{{90000,10000000}}}]],
	[89]=[[{{{90000,10000000}}}]],
	[90]=[[{{{90000,15000000}}}]],
	[91]=[[{{{90000,15000000}}}]],
	[92]=[[{{{90000,15000000}}}]],
	[93]=[[{{{90000,15000000}}}]],
	[94]=[[{{{90000,15000000}}}]],
	[95]=[[{{{90000,15000000}}}]],
	[96]=[[{{{90000,15000000}}}]],
	[97]=[[{{{90000,15000000}}}]],
	[98]=[[{{{90000,15000000}}}]],
	[99]=[[{{{90000,15000000}}}]],
	[100]=[[{{{90000,15000000}}}]],
	[101]=[[{{{90000,15000000}}}]],
	[102]=[[{{{90000,15000000}}}]],
	[103]=[[{{{90000,15000000}}}]],
	[104]=[[{{{90000,15000000}}}]],
	[105]=[[{{{90000,15000000}}}]],
	[106]=[[{{{90000,15000000}}}]],
	[107]=[[{{{90000,15000000}}}]],
	[108]=[[{{{90000,15000000}}}]],
	[109]=[[{{{90000,15000000}}}]],
	[110]=[[{{{90000,15000000}}}]],
	[111]=[[{{{90000,15000000}}}]],
	[112]=[[{{{90000,15000000}}}]],
	[113]=[[{{{90000,15000000}}}]],
	[114]=[[{{{90000,15000000}}}]],
	[115]=[[{{{90000,15000000}}}]],
	[116]=[[{{{90000,15000000}}}]],
	[117]=[[{{{90000,15000000}}}]],
	[118]=[[{{{90000,15000000}}}]],
	[119]=[[{{{90000,15000000}}}]],
	[120]=[[{{{90000,15000000}}}]],
	[121]=[[{{{90000,15000000}}}]],
	[122]=[[{{{90000,15000000}}}]],
	[123]=[[{{{90000,15000000}}}]],
	[124]=[[{{{90000,15000000}}}]],
	[125]=[[{{{90000,15000000}}}]],
	[126]=[[{{{90000,15000000}}}]],
	[127]=[[{{{90000,15000000}}}]],
	[128]=[[{{{90000,15000000}}}]],
	[129]=[[{{{90000,15000000}}}]],
	[130]=[[{{{90000,15000000}}}]],
	[131]=[[{{{90000,15000000}}}]],
	[132]=[[{{{90000,15000000}}}]],
	[133]=[[{{{90000,15000000}}}]],
	[134]=[[{{{90000,15000000}}}]],
	[135]=[[{{{90000,15000000}}}]],
	[136]=[[{{{90000,15000000}}}]],}
local mt = {}
	mt.__index = function(_table, index)
	if DataQuestPursue.costData[index] then return DataQuestPursue.costData[index] end
	local base = loadstring(string.format('return %s',DataQuestPursue.costGetFunc[index]))() if not base then return end
	DataQuestPursue.costData[index]={
		cost=base[1]
	}
	return DataQuestPursue.costData[index]
end
setmetatable(DataQuestPursue.data_cost, mt)

DataQuestPursue.data_reward_length = 72
DataQuestPursue.data_reward={}
DataQuestPursue.rewardData={}
DataQuestPursue.rewardGetFunc={
	[65]=[[{65,300000,0}]],
	[66]=[[{66,300000,0}]],
	[67]=[[{67,300000,0}]],
	[68]=[[{68,300000,0}]],
	[69]=[[{69,300000,0}]],
	[70]=[[{70,500000,0}]],
	[71]=[[{71,500000,0}]],
	[72]=[[{72,500000,0}]],
	[73]=[[{73,500000,0}]],
	[74]=[[{74,500000,0}]],
	[75]=[[{75,500000,0}]],
	[76]=[[{76,500000,0}]],
	[77]=[[{77,500000,0}]],
	[78]=[[{78,500000,0}]],
	[79]=[[{79,500000,0}]],
	[80]=[[{80,800000,0}]],
	[81]=[[{81,800000,0}]],
	[82]=[[{82,800000,0}]],
	[83]=[[{83,800000,0}]],
	[84]=[[{84,800000,0}]],
	[85]=[[{85,800000,0}]],
	[86]=[[{86,800000,0}]],
	[87]=[[{87,800000,0}]],
	[88]=[[{88,800000,0}]],
	[89]=[[{89,800000,0}]],
	[90]=[[{90,1500000,0}]],
	[91]=[[{91,1500000,0}]],
	[92]=[[{92,1500000,0}]],
	[93]=[[{93,1500000,0}]],
	[94]=[[{94,1500000,0}]],
	[95]=[[{95,1500000,0}]],
	[96]=[[{96,1500000,0}]],
	[97]=[[{97,1500000,0}]],
	[98]=[[{98,1500000,0}]],
	[99]=[[{99,1500000,0}]],
	[100]=[[{100,1500000,0}]],
	[101]=[[{101,1500000,0}]],
	[102]=[[{102,1500000,0}]],
	[103]=[[{103,1500000,0}]],
	[104]=[[{104,1500000,0}]],
	[105]=[[{105,2000000,0}]],
	[106]=[[{106,2000000,0}]],
	[107]=[[{107,2000000,0}]],
	[108]=[[{108,2000000,0}]],
	[109]=[[{109,2000000,0}]],
	[110]=[[{110,2000000,0}]],
	[111]=[[{111,2000000,0}]],
	[112]=[[{112,2000000,0}]],
	[113]=[[{113,2000000,0}]],
	[114]=[[{114,2000000,0}]],
	[115]=[[{115,2500000,0}]],
	[116]=[[{116,2500000,0}]],
	[117]=[[{117,2500000,0}]],
	[118]=[[{118,2500000,0}]],
	[119]=[[{119,2500000,0}]],
	[120]=[[{120,2500000,0}]],
	[121]=[[{121,2500000,0}]],
	[122]=[[{122,2500000,0}]],
	[123]=[[{123,2500000,0}]],
	[124]=[[{124,2500000,0}]],
	[125]=[[{125,3000000,0}]],
	[126]=[[{126,3000000,0}]],
	[127]=[[{127,3000000,0}]],
	[128]=[[{128,3000000,0}]],
	[129]=[[{129,3000000,0}]],
	[130]=[[{130,3000000,0}]],
	[131]=[[{131,3000000,0}]],
	[132]=[[{132,3000000,0}]],
	[133]=[[{133,3000000,0}]],
	[134]=[[{134,3000000,0}]],
	[135]=[[{135,3000000,0}]],
	[136]=[[{136,3000000,0}]],}
local mt = {}
	mt.__index = function(_table, index)
	if DataQuestPursue.rewardData[index] then return DataQuestPursue.rewardData[index] end
	local base = loadstring(string.format('return %s',DataQuestPursue.rewardGetFunc[index]))() if not base then return end
	DataQuestPursue.rewardData[index]={
		lev=base[1],
		ratio=base[2],
		pet_ratio=base[3]
	}
	return DataQuestPursue.rewardData[index]
end
setmetatable(DataQuestPursue.data_reward, mt)